services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: product-trend-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: product_trends
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: product-trend-redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: product-trend-backend
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/product_trends
      - REDIS_URL=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    networks:
      - app-network

  # Celery Worker
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: product-trend-celery
    command: celery -A tasks.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/product_trends
      - REDIS_URL=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    networks:
      - app-network

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: product-trend-celery-beat
    command: celery -A tasks.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/product_trends
      - REDIS_URL=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    networks:
      - app-network

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: product-trend-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
